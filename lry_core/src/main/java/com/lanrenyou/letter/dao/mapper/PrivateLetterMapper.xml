<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.lanrenyou.letter.dao.IPrivateLetterDao" >
  <resultMap id="BaseResultMap" type="com.lanrenyou.letter.model.PrivateLetter" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sender_uid" property="senderUid" jdbcType="INTEGER" />
    <result column="receiver_uid" property="receiverUid" jdbcType="INTEGER" />
    <result column="context" property="context" jdbcType="VARCHAR" />
    <result column="has_read" property="hasRead" jdbcType="TINYINT" />
    <result column="has_reply" property="hasReply" jdbcType="TINYINT" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sender_uid, receiver_uid, context, has_read, has_reply, is_deleted
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_private_letter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lanrenyou.letter.model.PrivateLetter" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_private_letter (sender_uid, receiver_uid, context, 
      has_read, has_reply)
    values (#{senderUid,jdbcType=INTEGER}, #{receiverUid,jdbcType=INTEGER}, #{context,jdbcType=VARCHAR}, 
      #{hasRead,jdbcType=TINYINT}, #{hasReply,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lanrenyou.letter.model.PrivateLetter" >
    update tb_private_letter
    set sender_uid = #{senderUid,jdbcType=INTEGER},
      receiver_uid = #{receiverUid,jdbcType=INTEGER},
      context = #{context,jdbcType=VARCHAR},
      has_read = #{hasRead,jdbcType=TINYINT},
      has_reply = #{hasReply,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_private_letter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_private_letter
  </select>
  <select id="getPrivateLetterCountByReceiverUid" resultType="java.lang.Integer" parameterType="java.util.Map">
    select
    count(1)
    from tb_private_letter
    where receiver_uid = #{receiverUid,jdbcType=INTEGER} and is_deleted = 0
  </select>
  <select id="getPrivateLetterByReceiverUid" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from tb_private_letter
    where receiver_uid = #{receiverUid,jdbcType=INTEGER} and is_deleted = 0 limit #{offset, jdbcType=INTEGER}, #{limit, jdbcType=INTEGER} 
  </select>
  <select id="getPrivateLetterCountByReceiverUidAndSenderUid" resultType="java.lang.Integer" parameterType="java.util.Map">
    select
    count(1)
    from tb_private_letter
    where receiver_uid = #{receiverUid,jdbcType=INTEGER} and sender_uid = #{senderUid,jdbcType=INTEGER} and is_deleted = 0
  </select>
  <select id="getPrivateLetterByReceiverUidAndSenderUid" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from tb_private_letter
    where receiver_uid = #{receiverUid,jdbcType=INTEGER} and sender_uid = #{senderUid,jdbcType=INTEGER} and is_deleted = 0 limit #{offset, jdbcType=INTEGER}, #{limit, jdbcType=INTEGER} 
  </select>
  
  	<update id="updateHasReadById" parameterType="java.util.Map" >
	    update tb_private_letter
	    set 
			has_read = 1
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateHasReplyById" parameterType="java.util.Map" >
	    update tb_private_letter
	    set 
	   		has_reply = 1
	   	where id = #{id,jdbcType=INTEGER}
	</update>
    <update id="updateIsDeletedById" parameterType="java.util.Map" >
	    update tb_private_letter
	    set
	    	is_deleted = 1
	    where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>